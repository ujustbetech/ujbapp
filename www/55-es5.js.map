{"version":3,"sources":["55-es5.js","webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC;QAEnE,KAAK,CAAC,0DAA0D;QAChE;;4EAEoE;QACpE,mFAAmF;QACnF,KAAK,CAAC,CAAC,UAAS,MAAM,EAAE,mBAAmB,EAAE,mBAAmB;YAEhE,YAAY,CAAC;YAFN,iBA8sBA;YCrtBP;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAKA,IAAM,KAAK;gBACP,iBAAY,OAAO;oBACf,2DAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAChC;;;;;uBAKG;oBACH,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;oBACd,IAAI,CAAC,mBAAmB,GAAG,2DAAW,CAAC,IAAI,EAAE,qBAAqB,EAAE,CAAC,CAAC,CAAC;gBAC3E,CAAC;gBACD,0BAAQ,GAAR,UAAS,QAAQ;oBACb,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5C,CAAC;gBACD,kCAAgB,GAAhB,UAAiB,QAAQ,EAAE,QAAQ;;oBAC/B,IAAI,QAAQ,KAAK,QAAQ,EAAE;wBACvB,OAAO;qBACV;oBACD,IAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBACpD,IAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBACpD,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE;wBAC/B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACxB,OAAO;qBACV;;wBACD,KAAkB,4BAAK,4EAAE;4BAApB,IAAM,GAAG;4BACV,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,EAAE;gCACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gCACxB,OAAO;6BACV;yBACJ;;;;;;;;;gBACL,CAAC;gBACD,mCAAiB,GAAjB;oBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;gBACpC,CAAC;gBACD,sBAAW,mBAAQ;yBAAnB;wBAAwB,OAAO;4BAC3B,KAAK,EAAE,CAAC,UAAU,CAAC;4BACnB,WAAW,EAAE,CAAC,UAAU,CAAC;4BACzB,gBAAgB,EAAE,CAAC,kBAAkB,CAAC;yBACzC,CAAC;oBAAC,CAAC;;;mBAAA;gBACR,cAAC;YAAD,CAAC,IAAC;YAEF,IAAM,aAAa;gBACf,iBAAY,OAAO;oBACf,2DAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAChC,IAAI,CAAC,uBAAuB,GAAG,2DAAW,CAAC,IAAI,EAAE,yBAAyB,EAAE,CAAC,CAAC,CAAC;gBACnF,CAAC;gBACD,+BAAa,GAAb;oBACI,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;gBACxC,CAAC;gBACD,mCAAiB,GAAjB;oBACI,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;gBACxC,CAAC;gBACD,sBAAW,mBAAQ;yBAAnB;wBAAwB,OAAO;4BAC3B,MAAM,EAAE,CAAC,eAAe,CAAC;4BACzB,IAAI,EAAE,CAAC,eAAe,CAAC;yBAC1B,CAAC;oBAAC,CAAC;;;mBAAA;gBACR,cAAC;YAAD,CAAC,IAAC;YAEF,IAAM,kBAAkB,GAAG,MAAM,CAAC;YAClC,IAAM,qBAAqB,GAAG,SAAS,CAAC;YACxC,IAAM,kBAAkB,GAAG,MAAM,CAAC;YAElC,IAAM,YAAY,GAAG,UAAC,QAAQ;gBAC1B,IAAM,IAAI,GAAG,QAAQ;qBAChB,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,GAAG,CAAC,EAAZ,CAAY,CAAC;qBACzB,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,OAAO,GAAG,GAAG,IAAI,CAAC;YACtB,CAAC,CAAC;YACF,IAAM,WAAW,GAAG,UAAC,KAAK;;gBACtB,IAAM,IAAI,GAAG,EAAE,CAAC;;oBAChB,KAAoB,4BAAK,4EAAE;wBAAtB,IAAM,KAAK;;4BACZ,KAAsB,sCAAK,CAAC,IAAI,8CAAE;gCAA7B,IAAM,OAAO;gCACd,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oCACpB,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC7D,IAAI,CAAC,KAAK,EAAE;wCACR,OAAO,IAAI,CAAC;qCACf;oCACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iCACpB;qCACI,IAAI,OAAO,KAAK,EAAE,EAAE;oCACrB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iCACtB;6BACJ;;;;;;;;;qBACJ;;;;;;;;;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC;YACF,IAAM,SAAS,GAAG,UAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK;gBAC7D,IAAI,GAAG,GAAG,YAAY,UACf,SAAS,CAAC,IAAI,CAAC,EACf,IAAI,EACT,CAAC;gBACH,IAAI,OAAO,EAAE;oBACT,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;iBACnB;gBACD,IAAI,SAAS,KAAK,qBAAqB,EAAE;oBACrC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;iBACrC;qBACI;oBACD,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;iBACxC;YACL,CAAC,CAAC;YACF,IAAM,YAAY,GAAG,UAAC,MAAM,EAAE,IAAI;gBAC9B,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;oBAC7B,OAAO,IAAI,CAAC;iBACf;gBACD,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;oBACxC,OAAO,IAAI,CAAC;iBACf;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE;wBAC/C,OAAO,IAAI,CAAC;qBACf;iBACJ;gBACD,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;oBAC/B,OAAO,CAAC,EAAE,CAAC,CAAC;iBACf;gBACD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC,CAAC;YACF,IAAM,QAAQ,GAAG,UAAC,GAAG,EAAE,IAAI,EAAE,OAAO;gBAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;gBAC5B,IAAI,OAAO,EAAE;oBACT,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;oBACtB,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;wBACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACf,CAAC,CAAC,EAAE,CAAC;iBACZ;gBACD,IAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACjC,OAAO,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,IAAM,SAAS,GAAG,UAAC,IAAI;gBACnB,IAAI,IAAI,IAAI,IAAI,EAAE;oBACd,OAAO,CAAC,EAAE,CAAC,CAAC;iBACf;gBACD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;qBAC3B,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC;qBAClB,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,GAAG,CAAC,EAAZ,CAAY,CAAC,CAAC;gBAC/B,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvB,OAAO,CAAC,EAAE,CAAC,CAAC;iBACf;qBACI;oBACD,OAAO,QAAQ,CAAC;iBACnB;YACL,CAAC,CAAC;YAEF,IAAM,WAAW,GAAG,UAAC,MAAM;;gBACvB,OAAO,CAAC,KAAK,CAAC,uBAAqB,MAAM,CAAC,MAAM,MAAG,CAAC,CAAC;wCAC1C,KAAK;oBACZ,IAAM,IAAI,GAAG,EAAE,CAAC;oBAChB,KAAK,CAAC,OAAO,CAAC,WAAC,IAAI,WAAI,CAAC,IAAI,OAAT,IAAI,WAAS,CAAC,CAAC,IAAI,IAAnB,CAAoB,CAAC,CAAC;oBACzC,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,CAAC;oBACjC,OAAO,CAAC,KAAK,CAAC,QAAM,YAAY,CAAC,IAAI,CAAG,EAAE,uCAAuC,EAAE,MAAM,EAAE,MAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAG,CAAC,CAAC;;;oBAJtH,KAAoB,8BAAM;wBAArB,IAAM,KAAK;gCAAL,KAAK;qBAKf;;;;;;;;;gBACD,OAAO,CAAC,QAAQ,EAAE,CAAC;YACvB,CAAC,CAAC;YACF,IAAM,cAAc,GAAG,UAAC,SAAS;;gBAC7B,OAAO,CAAC,KAAK,CAAC,0BAAwB,SAAS,CAAC,MAAM,MAAG,CAAC,CAAC;;oBAC3D,KAAuB,oCAAS,gGAAE;wBAA7B,IAAM,QAAQ;wBACf,IAAI,QAAQ,CAAC,EAAE,EAAE;4BACb,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAM,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAG,EAAE,mBAAmB,EAAE,OAAO,EAAE,QAAM,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAG,EAAE,mBAAmB,CAAC,CAAC;yBACtJ;qBACJ;;;;;;;;;gBACD,OAAO,CAAC,QAAQ,EAAE,CAAC;YACvB,CAAC,CAAC;YAEF,IAAM,aAAa,GAAG,UAAO,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,OAAe;gBAAf,yCAAe;;;;;;;gCAG7D,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;gCACnC,iEAAiE;gCACjE,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;oCAClC,sBAAO,OAAO,EAAC;iCAClB;gCACD,qBAAM,MAAM,CAAC,gBAAgB,EAAE;;gCAA/B,SAA+B,CAAC;gCAC1B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gCACZ,qBAAM,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC;;gCAAnE,MAAM,GAAG,SAA0D;gCACzE,6EAA6E;gCAC7E,6CAA6C;gCAC7C,IAAI,MAAM,CAAC,OAAO,EAAE;oCAChB,SAAS,GAAG,kBAAkB,CAAC;oCAC/B,OAAO,GAAG,IAAI,CAAC;iCAClB;gCAES,qBAAM,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC;;gCADnF,iCAAiC;gCACjC,OAAO,GAAG,SAAyE,CAAC;qCAGhF,MAAM,CAAC,WAAW,EAAlB,wBAAkB;gCAClB,qBAAM,MAAM,CAAC,WAAW,EAAE;;gCAA1B,SAA0B,CAAC;;oCAE/B,sBAAO,OAAO,EAAC;;;gCAGf,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;gCACjB,sBAAO,KAAK,EAAC;;;;;aAEpB,CAAC;YACF,IAAM,YAAY,GAAG,UAAO,IAAI;;;;;4BACtB,GAAG,GAAG,EAAE,CAAC;4BAEX,IAAI,GAAG,IAAI,CAAC;;;iCAET,IAAI;4BACP,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;iCACzB,MAAM,EAAN,wBAAM;4BACK,qBAAM,MAAM,CAAC,UAAU,EAAE;;4BAA9B,EAAE,GAAG,SAAyB;4BACpC,IAAI,EAAE,EAAE;gCACJ,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC;gCAClB,EAAE,CAAC,OAAO,GAAG,SAAS,CAAC;gCACvB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;6BAChB;iCACI;gCACD,wBAAM;6BACT;;gCAGD,wBAAM;;gCAGd,sBAAO,EAAE,GAAG,OAAE,MAAM,UAAE,EAAC;;;iBAC1B,CAAC;YACF,IAAM,gBAAgB,GAAG;gBACrB,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBAC9B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;iBAC5B;gBACD,OAAO,IAAI,OAAO,CAAC,iBAAO;oBACtB,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvE,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YACF,IAAM,KAAK,GAAG,4FAA4F,CAAC;YAC3G,IAAM,aAAa,GAAG,UAAC,IAAI;gBACvB,IAAI,CAAC,IAAI,EAAE;oBACP,OAAO,SAAS,CAAC;iBACpB;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,OAAO,IAAI,CAAC;iBACf;gBACD,IAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBACzC,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;YACvC,CAAC,CAAC;YAEF,IAAM,eAAe,GAAG,UAAC,KAAK,EAAE,KAAK;gBACzB,qBAAI,EAAE,aAAE,CAAW;gBAC3B,IAAI,EAAE,KAAK,SAAS,EAAE;oBAClB,OAAO,KAAK,CAAC;iBAChB;gBACD,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE;oBAC5B,OAAO,KAAK,CAAC;iBAChB;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClC,IAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,QAAQ,KAAK,GAAG,EAAE;wBAClB,OAAO,IAAI,CAAC;qBACf;oBACD,IAAI,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;wBACvB,OAAO,KAAK,CAAC;qBAChB;iBACJ;gBACD,OAAO,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC;YACxC,CAAC,CAAC;YACF,IAAM,aAAa,GAAG,UAAC,IAAI,EAAE,MAAM;gBAC/B,OAAO,MAAM,CAAC,IAAI,CAAC,eAAK,IAAI,sBAAe,CAAC,IAAI,EAAE,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAAC;YAC9D,CAAC,CAAC;YACF,IAAM,UAAU,GAAG,UAAC,GAAG,EAAE,KAAK;gBAC1B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC/C,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;oBACjB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wBACtC,MAAM;qBACT;iBACJ;gBACD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC;YACF,IAAM,WAAW,GAAG,UAAC,SAAS,EAAE,KAAK;;gBACjC,IAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,SAAS,CAAC,CAAC;gBAC/C,IAAI,cAAc,GAAG,KAAK,CAAC;gBAC3B,IAAI,SAAS,CAAC;gBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC3B,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;wBAChB,cAAc,GAAG,IAAI,CAAC;qBACzB;yBACI;;4BACD,KAAsB,yCAAI,wEAAE;gCAAvB,IAAM,OAAO;gCACd,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;gCAC7B,aAAa;gCACb,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oCACpB,IAAI,IAAI,KAAK,EAAE,EAAE;wCACb,OAAO,IAAI,CAAC;qCACf;oCACD,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;oCAC5B,IAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;oCACnD,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iCACnC;qCACI,IAAI,IAAI,KAAK,OAAO,EAAE;oCACvB,OAAO,IAAI,CAAC;iCACf;6BACJ;;;;;;;;;wBACD,cAAc,GAAG,KAAK,CAAC;qBAC1B;iBACJ;gBACD,IAAM,OAAO,GAAG,CAAC,cAAc,CAAC;oBAC5B,CAAC,CAAC,cAAc,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;oBAC7C,CAAC,CAAC,IAAI,CAAC;gBACX,IAAI,CAAC,OAAO,EAAE;oBACV,OAAO,IAAI,CAAC;iBACf;gBACD,IAAI,SAAS,EAAE;oBACX,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,CAAC,IAAK,QAAC;wBAC5B,EAAE,EAAE,KAAK,CAAC,EAAE;wBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,MAAM,EAAE,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;qBAClD,CAAC,EAJ6B,CAI7B,CAAC,CAAC;iBACP;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACF,IAAM,WAAW,GAAG,UAAC,CAAC,EAAE,CAAC;gBACrB,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;oBACT,OAAO,CAAC,CAAC;iBACZ;qBACI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;oBACd,OAAO,CAAC,CAAC;iBACZ;qBACI,IAAI,CAAC,IAAI,CAAC,EAAE;oBACb,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACjD;gBACD,OAAO,SAAS,CAAC;YACrB,CAAC,CAAC;YACF,IAAM,gBAAgB,GAAG,UAAC,GAAG,EAAE,MAAM;;gBACjC,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,UAAU,GAAG,CAAC,CAAC;gBACnB,IAAM,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,CAAC;;oBACpC,KAAoB,8BAAM,iFAAE;wBAAvB,IAAM,KAAK;wBACZ,IAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;wBAC1C,IAAI,KAAK,GAAG,UAAU,EAAE;4BACpB,KAAK,GAAG,KAAK,CAAC;4BACd,UAAU,GAAG,KAAK,CAAC;yBACtB;qBACJ;;;;;;;;;gBACD,IAAI,KAAK,EAAE;oBACP,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,CAAC,IAAK,QAAC;wBAC5B,EAAE,EAAE,KAAK,CAAC,EAAE;wBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,MAAM,EAAE,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;qBAC7D,CAAC,EAJ6B,CAI7B,CAAC,CAAC;iBACP;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC;YACF,IAAM,iBAAiB,GAAG,UAAC,IAAI,EAAE,MAAM;;gBACnC,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG,CAAC,CAAC;;oBAChB,KAAoB,8BAAM,iFAAE;wBAAvB,IAAM,KAAK;wBACZ,IAAM,YAAY,GAAG,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAC9C,IAAI,YAAY,KAAK,IAAI,EAAE;4BACvB,IAAM,KAAK,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC;4BAC5C,IAAI,KAAK,GAAG,OAAO,EAAE;gCACjB,OAAO,GAAG,KAAK,CAAC;gCAChB,KAAK,GAAG,YAAY,CAAC;6BACxB;yBACJ;qBACJ;;;;;;;;;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACF,IAAM,eAAe,GAAG,UAAC,KAAK;;gBAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,IAAI,KAAK,GAAG,CAAC,CAAC;;oBACd,KAAoB,4BAAK,4EAAE;wBAAtB,IAAM,KAAK;;4BACZ,KAAmB,uCAAK,CAAC,IAAI,8CAAE;gCAA1B,IAAM,IAAI;gCACX,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oCACjB,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;iCAC/B;qCACI,IAAI,IAAI,KAAK,EAAE,EAAE;oCAClB,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;iCAC/B;gCACD,KAAK,EAAE,CAAC;6BACX;;;;;;;;;qBACJ;;;;;;;;;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACF;gBACI,wBAAY,IAAI;oBACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC7B,CAAC;gBACD,6BAAI,GAAJ;oBACI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;qBAC5B;oBACD,OAAO,EAAE,CAAC;gBACd,CAAC;gBACL,qBAAC;YAAD,CAAC;YAED,IAAM,aAAa,GAAG,UAAC,IAAI;gBACvB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;qBAC3B,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,OAAO,KAAK,oBAAoB,EAAnC,CAAmC,CAAC;qBACjD,GAAG,CAAC,YAAE;oBACP,IAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;oBAC9B,OAAO;wBACH,IAAI,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;wBACrC,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC;qBAC7C,CAAC;gBACN,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YACF,IAAM,UAAU,GAAG,UAAC,IAAI;gBACpB,OAAO,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC;YACF,IAAM,cAAc,GAAG,UAAC,IAAI,EAAE,IAAW;gBAAX,kCAAW;gBACrC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;qBAC3B,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,OAAO,KAAK,WAAW,IAAI,EAAE,CAAC,SAAS,EAA1C,CAA0C,CAAC;qBACxD,GAAG,CAAC,YAAE;oBACP,IAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;oBAC5C,IAAI,SAAS,IAAI,IAAI,EAAE;wBACnB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;qBACrD;oBACD,OAAO;wBACH,IAAI,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBACpC,EAAE,EAAE,SAAS,CAAC,WAAW,EAAE;wBAC3B,MAAM,EAAE,EAAE,CAAC,cAAc;wBACzB,QAAQ,EAAE,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC;qBACrC,CAAC;gBACN,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YACF,IAAM,QAAQ,GAAG,UAAC,EAAE,EAAE,IAAI;gBACtB,IAAI,IAAI,IAAI,EAAE,EAAE;oBACZ,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;iBACnB;gBACD,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;oBACvB,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBAChC;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC;YACF,IAAM,iBAAiB,GAAG,UAAC,KAAK;;gBAC5B,IAAM,MAAM,GAAG,EAAE,CAAC;;oBAClB,KAAmB,4BAAK,4EAAE;wBAArB,IAAM,IAAI;wBACX,WAAW,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBACjC;;;;;;;;;gBACD,OAAO,MAAM,CAAC;YAClB,CAAC,CAAC;YACF,IAAM,WAAW,GAAG,UAAC,KAAK,EAAE,MAAM,EAAE,IAAI;;gBACpC,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;gBACxB,CAAC,CAAC,IAAI,CAAC;oBACH,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB,CAAC,CAAC;gBACH,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACf,OAAO;iBACV;;oBACD,KAAkB,sBAAI,CAAC,QAAQ,6CAAE;wBAA5B,IAAM,GAAG;wBACV,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;qBAC/B;;;;;;;;;YACL,CAAC,CAAC;YAEF,IAAM,MAAM;gBACR,iBAAY,OAAO;oBACf,2DAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB;;;;uBAIG;oBACH,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB;;;;;;;;;;;;;uBAaG;oBACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,IAAI,CAAC,kBAAkB,GAAG,2DAAW,CAAC,IAAI,EAAE,oBAAoB,EAAE,CAAC,CAAC,CAAC;oBACrE,IAAI,CAAC,iBAAiB,GAAG,2DAAW,CAAC,IAAI,EAAE,mBAAmB,EAAE,CAAC,CAAC,CAAC;gBACvE,CAAC;gBACK,mCAAiB,GAAvB;;;;;oCACI,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;oCAC/C,qBAAM,gBAAgB,EAAE;;oCAAxB,SAAwB,CAAC;oCACzB,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;oCACxC,qBAAM,IAAI,CAAC,eAAe,EAAE;;oCAA5B,SAA4B,CAAC;;;;;iBAChC;gBACD,kCAAgB,GAAhB;oBACI,MAAM,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,8DAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;oBACpG,MAAM,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,8DAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBACnG,CAAC;gBACD,4BAAU,GAAV;oBACI,IAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC1C,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC5B,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;oBACzE,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBACnD,CAAC;gBACD,8BAAY,GAAZ,UAAa,EAAE;oBAAf,iBAEC;oBADG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAM,YAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;gBAC7C,CAAC;gBACD;;;;;mBAKG;gBACH,sBAAI,GAAJ,UAAK,GAAG,EAAE,SAAqB;oBAArB,iDAAqB;oBAC3B,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;wBACrB,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;qBACvD;oBACD,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;oBACzE,IAAM,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oBAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBACnD,CAAC;gBACD;;mBAEG;gBACH,sBAAI,GAAJ;oBACI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7C,CAAC;gBACD,gBAAgB;gBACV,4BAAU,GAAhB;;;4BACI,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;4BAC9C,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;4BAClD,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;4BACjC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;;;iBAC1C;gBACD,gBAAgB;gBACV,4BAAU,GAAhB,UAAiB,SAAS;;;;;;oCACtB,IAAI,IAAI,CAAC,IAAI,EAAE;wCACX,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;wCACtE,sBAAO,KAAK,EAAC;qCAChB;oCACuB,qBAAM,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;;oCAA1D,KAAkB,SAAwC,EAAxD,GAAG,WAAE,MAAM;oCACb,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oCAC7B,KAAK,GAAG,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;oCAC5C,IAAI,CAAC,KAAK,EAAE;wCACR,OAAO,CAAC,IAAI,CAAC,mCAAmC,EAAE,GAAG,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,CAAC,CAAC;wCACtE,sBAAO,KAAK,EAAC;qCAChB;oCACK,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;oCAChC,IAAI,CAAC,IAAI,EAAE;wCACP,OAAO,CAAC,IAAI,CAAC,iFAAiF,CAAC,CAAC;wCAChG,sBAAO,KAAK,EAAC;qCAChB;oCACD,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;oCACnE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oCAC9B,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;;oCAAvF,SAAuF,CAAC;oCACxF,sBAAO,IAAI,EAAC;;;;iBACf;gBACD,mCAAiB,GAAjB;oBACI,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC5B,IAAI,IAAI,IAAI,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;wBACrD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;qBACpD;gBACL,CAAC;gBACD,iCAAe,GAAf;oBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,kBAAkB,CAAC,CAAC;gBACtE,CAAC;gBACD,kCAAgB,GAAhB;oBACI,IAAM,GAAG,GAAG,MAAM,CAAC;oBACnB,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;wBAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;qBACjH;oBACD,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;oBAChC,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,KAAK,GAAG,SAAS,EAAE;wBACnB,OAAO,qBAAqB,CAAC;qBAChC;yBACI,IAAI,KAAK,GAAG,SAAS,EAAE;wBACxB,OAAO,kBAAkB,CAAC;qBAC7B;yBACI;wBACD,OAAO,kBAAkB,CAAC;qBAC7B;gBACL,CAAC;gBACK,mCAAiB,GAAvB,UAAwB,IAAI,EAAE,SAAS;;;;4BACnC,IAAI,CAAC,IAAI,EAAE;gCACP,OAAO,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;gCACjE,sBAAO,KAAK,EAAC;6BAChB;4BAEK,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BACnC,QAAQ,GAAG,aAAa,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;4BAC5C,YAAY,GAAG,IAAI,CAAC;4BACxB,IAAI,QAAQ,EAAE;gCACV,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;gCACrC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;gCAC7B,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC;6BACtB;4BAEK,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAC7B,KAAK,GAAG,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;4BAC9C,IAAI,CAAC,KAAK,EAAE;gCACR,OAAO,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;gCAChE,sBAAO,KAAK,EAAC;6BAChB;4BACD,iBAAiB;4BACjB,sBAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY,CAAC,EAAC;;;iBACtF;gBACK,mCAAiB,GAAvB,UAAwB,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,KAAS;oBAAT,iCAAS;;;;;wCAC1D,qBAAM,IAAI,CAAC,IAAI,EAAE;;oCAA1B,MAAM,GAAG,SAAiB;oCAC5B,OAAO,GAAG,KAAK,CAAC;;;;oCAEN,qBAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC;;oCAArF,OAAO,GAAG,SAA2E,CAAC;;;;oCAGtF,OAAO,CAAC,KAAK,CAAC,IAAC,CAAC,CAAC;;;oCAErB,MAAM,EAAE,CAAC;oCACT,sBAAO,OAAO,EAAC;;;;iBAClB;gBACK,sBAAI,GAAV;;;;;;oCACU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;oCAE3B,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAC,WAAC,IAAI,cAAO,GAAG,CAAC,EAAX,CAAW,CAAC,CAAC;yCAC7C,EAAC,KAAK,SAAS,GAAf,wBAAe;oCACf,qBAAM,CAAC;;oCAAP,SAAO,CAAC;;wCAEZ,sBAAO,OAAO,EAAC;;;;iBAClB;gBACK,+BAAa,GAAnB,UAAoB,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,KAAS;oBAAT,iCAAS;;;;;;oCACrE,IAAI,IAAI,CAAC,IAAI,EAAE;wCACX,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;wCACtE,sBAAO,KAAK,EAAC;qCAChB;oCACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oCAEX,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;oCAC7D,IAAI,UAAU,EAAE;wCACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qCAC5C;oCACe,qBAAM,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC;;oCAA5D,OAAO,GAAG,SAAkD;oCAClE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oCAClB,IAAI,OAAO,EAAE;wCACT,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;qCACrD;oCACD,kBAAkB;oCAClB,IAAI,UAAU,EAAE;wCACZ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qCAC3C;oCACD,sBAAO,OAAO,EAAC;;;;iBAClB;gBACD,yBAAO,GAAP,UAAQ,IAAI,EAAE,SAAS;oBACnB,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpF,CAAC;gBACD,yBAAO,GAAP;oBACI,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC9D,CAAC;gBACD,kCAAgB,GAAhB,UAAiB,IAAI,EAAE,gBAAgB;oBACnC,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;oBAC/B,IAAM,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;oBAC9B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACvB,IAAI,EAAE,KAAK,IAAI,EAAE;wBACb,OAAO,IAAI,CAAC;qBACf;oBACD,IAAM,cAAc,GAAG,gBAAgB,CAAC,CAAC,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAChF,OAAO;wBACH,IAAI;wBACJ,cAAc;wBACd,EAAE;qBACL,CAAC;gBACN,CAAC;gBACD,sBAAI,uBAAE;yBAAN,cAAW,OAAO,2DAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;mBAAA;gBACzC,cAAC;YAAD,CAAC,IAAC;YAEF,IAAM,UAAU;gBACZ,iBAAY,OAAO;oBAAnB,iBAUC;oBATG,2DAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAChC;;;uBAGG;oBACH,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;oBACjC,IAAI,CAAC,OAAO,GAAG,UAAC,EAAE;wBACd,4DAAO,CAAC,KAAI,CAAC,IAAI,EAAE,EAAE,EAAE,KAAI,CAAC,eAAe,CAAC,CAAC;oBACjD,CAAC,CAAC;gBACN,CAAC;gBACD,wBAAM,GAAN;;oBACI,IAAM,IAAI,GAAG,2DAAU,CAAC,IAAI,CAAC,CAAC;oBAC9B,IAAM,KAAK,GAAG;wBACV,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,GAAG,EAAE,IAAI,CAAC,GAAG;wBACb,MAAM,EAAE,IAAI,CAAC,MAAM;qBACtB,CAAC;oBACF,OAAO,CAAC,2DAAC,CAAC,mDAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,4DAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,YAAI,GAAC,IAAI,IAAG,IAAI,EAAE,qBAAiB,GAAE,IAAI,MAAG,EAAE,EAAE,2DAAC,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,2DAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvN,CAAC;gBACD,sBAAW,gBAAK;yBAAhB,cAAqB,OAAO,wYAAwY,CAAC,CAAC,CAAC;;;mBAAA;gBAC3a,cAAC;YAAD,CAAC,IAAC;YDwBF,KAAK;QAAC,CAAC,CAAC;KAEP,CAAC,CAAC,CAAC;AACJ,qCAAqC","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[55],{\n\n/***/ \"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js ***!\n  \\****************************************************************/\n/*! exports provided: ion_route, ion_route_redirect, ion_router, ion_router_link */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_route\", function() { return Route; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_route_redirect\", function() { return RouteRedirect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_router\", function() { return Router; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_router_link\", function() { return RouterLink; });\n/* harmony import */ var _core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-feeeff0d.js */ \"./node_modules/@ionic/core/dist/esm/core-feeeff0d.js\");\n/* harmony import */ var _config_3c7f3790_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-3c7f3790.js */ \"./node_modules/@ionic/core/dist/esm/config-3c7f3790.js\");\n/* harmony import */ var _helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers-46f4a262.js */ \"./node_modules/@ionic/core/dist/esm/helpers-46f4a262.js\");\n/* harmony import */ var _theme_18cbe2cc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./theme-18cbe2cc.js */ \"./node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js\");\n\n\n\n\n\nconst Route = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionRouteDataChanged\", 7);\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.ionRouteRedirectChanged = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\r\n    const path = segments\r\n        .filter(s => s.length > 0)\r\n        .join('/');\r\n    return '/' + path;\r\n};\r\nconst chainToPath = (chain) => {\r\n    const path = [];\r\n    for (const route of chain) {\r\n        for (const segment of route.path) {\r\n            if (segment[0] === ':') {\r\n                const param = route.params && route.params[segment.slice(1)];\r\n                if (!param) {\r\n                    return null;\r\n                }\r\n                path.push(param);\r\n            }\r\n            else if (segment !== '') {\r\n                path.push(segment);\r\n            }\r\n        }\r\n    }\r\n    return path;\r\n};\r\nconst writePath = (history, root, useHash, path, direction, state) => {\r\n    let url = generatePath([\r\n        ...parsePath(root),\r\n        ...path\r\n    ]);\r\n    if (useHash) {\r\n        url = '#' + url;\r\n    }\r\n    if (direction === ROUTER_INTENT_FORWARD) {\r\n        history.pushState(state, '', url);\r\n    }\r\n    else {\r\n        history.replaceState(state, '', url);\r\n    }\r\n};\r\nconst removePrefix = (prefix, path) => {\r\n    if (prefix.length > path.length) {\r\n        return null;\r\n    }\r\n    if (prefix.length <= 1 && prefix[0] === '') {\r\n        return path;\r\n    }\r\n    for (let i = 0; i < prefix.length; i++) {\r\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\r\n            return null;\r\n        }\r\n    }\r\n    if (path.length === prefix.length) {\r\n        return [''];\r\n    }\r\n    return path.slice(prefix.length);\r\n};\r\nconst readPath = (loc, root, useHash) => {\r\n    let pathname = loc.pathname;\r\n    if (useHash) {\r\n        const hash = loc.hash;\r\n        pathname = (hash[0] === '#')\r\n            ? hash.slice(1)\r\n            : '';\r\n    }\r\n    const prefix = parsePath(root);\r\n    const path = parsePath(pathname);\r\n    return removePrefix(prefix, path);\r\n};\r\nconst parsePath = (path) => {\r\n    if (path == null) {\r\n        return [''];\r\n    }\r\n    const segments = path.split('/')\r\n        .map(s => s.trim())\r\n        .filter(s => s.length > 0);\r\n    if (segments.length === 0) {\r\n        return [''];\r\n    }\r\n    else {\r\n        return segments;\r\n    }\r\n};\n\nconst printRoutes = (routes) => {\r\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n    for (const chain of routes) {\r\n        const path = [];\r\n        chain.forEach(r => path.push(...r.path));\r\n        const ids = chain.map(r => r.id);\r\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n    }\r\n    console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n    for (const redirect of redirects) {\r\n        if (redirect.to) {\r\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\r\n        }\r\n    }\r\n    console.groupEnd();\r\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false) => {\r\n    try {\r\n        // find next navigation outlet in the DOM\r\n        const outlet = searchNavNode(root);\r\n        // make sure we can continue interacting the DOM, otherwise abort\r\n        if (index >= chain.length || !outlet) {\r\n            return changed;\r\n        }\r\n        await outlet.componentOnReady();\r\n        const route = chain[index];\r\n        const result = await outlet.setRouteId(route.id, route.params, direction);\r\n        // if the outlet changed the page, reset navigation to neutral (no direction)\r\n        // this means nested outlets will not animate\r\n        if (result.changed) {\r\n            direction = ROUTER_INTENT_NONE;\r\n            changed = true;\r\n        }\r\n        // recursively set nested outlets\r\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed);\r\n        // once all nested outlets are visible let's make the parent visible too,\r\n        // using markVisible prevents flickering\r\n        if (result.markVisible) {\r\n            await result.markVisible();\r\n        }\r\n        return changed;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nconst readNavState = async (root) => {\r\n    const ids = [];\r\n    let outlet;\r\n    let node = root;\r\n    // tslint:disable-next-line:no-constant-condition\r\n    while (true) {\r\n        outlet = searchNavNode(node);\r\n        if (outlet) {\r\n            const id = await outlet.getRouteId();\r\n            if (id) {\r\n                node = id.element;\r\n                id.element = undefined;\r\n                ids.push(id);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n    if (searchNavNode(document.body)) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise(resolve => {\r\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\r\n    });\r\n};\r\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n    if (root.matches(QUERY)) {\r\n        return root;\r\n    }\r\n    const outlet = root.querySelector(QUERY);\r\n    return outlet ? outlet : undefined;\r\n};\n\nconst matchesRedirect = (input, route) => {\r\n    const { from, to } = route;\r\n    if (to === undefined) {\r\n        return false;\r\n    }\r\n    if (from.length > input.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < from.length; i++) {\r\n        const expected = from[i];\r\n        if (expected === '*') {\r\n            return true;\r\n        }\r\n        if (expected !== input[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return from.length === input.length;\r\n};\r\nconst routeRedirect = (path, routes) => {\r\n    return routes.find(route => matchesRedirect(path, route));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n    const len = Math.min(ids.length, chain.length);\r\n    let i = 0;\r\n    for (; i < len; i++) {\r\n        if (ids[i].toLowerCase() !== chain[i].id) {\r\n            break;\r\n        }\r\n    }\r\n    return i;\r\n};\r\nconst matchesPath = (inputPath, chain) => {\r\n    const segments = new RouterSegments(inputPath);\r\n    let matchesDefault = false;\r\n    let allparams;\r\n    for (let i = 0; i < chain.length; i++) {\r\n        const path = chain[i].path;\r\n        if (path[0] === '') {\r\n            matchesDefault = true;\r\n        }\r\n        else {\r\n            for (const segment of path) {\r\n                const data = segments.next();\r\n                // data param\r\n                if (segment[0] === ':') {\r\n                    if (data === '') {\r\n                        return null;\r\n                    }\r\n                    allparams = allparams || [];\r\n                    const params = allparams[i] || (allparams[i] = {});\r\n                    params[segment.slice(1)] = data;\r\n                }\r\n                else if (data !== segment) {\r\n                    return null;\r\n                }\r\n            }\r\n            matchesDefault = false;\r\n        }\r\n    }\r\n    const matches = (matchesDefault)\r\n        ? matchesDefault === (segments.next() === '')\r\n        : true;\r\n    if (!matches) {\r\n        return null;\r\n    }\r\n    if (allparams) {\r\n        return chain.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, allparams[i])\r\n        }));\r\n    }\r\n    return chain;\r\n};\r\nconst mergeParams = (a, b) => {\r\n    if (!a && b) {\r\n        return b;\r\n    }\r\n    else if (a && !b) {\r\n        return a;\r\n    }\r\n    else if (a && b) {\r\n        return Object.assign(Object.assign({}, a), b);\r\n    }\r\n    return undefined;\r\n};\r\nconst routerIDsToChain = (ids, chains) => {\r\n    let match = null;\r\n    let maxMatches = 0;\r\n    const plainIDs = ids.map(i => i.id);\r\n    for (const chain of chains) {\r\n        const score = matchesIDs(plainIDs, chain);\r\n        if (score > maxMatches) {\r\n            match = chain;\r\n            maxMatches = score;\r\n        }\r\n    }\r\n    if (match) {\r\n        return match.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, ids[i] && ids[i].params)\r\n        }));\r\n    }\r\n    return null;\r\n};\r\nconst routerPathToChain = (path, chains) => {\r\n    let match = null;\r\n    let matches = 0;\r\n    for (const chain of chains) {\r\n        const matchedChain = matchesPath(path, chain);\r\n        if (matchedChain !== null) {\r\n            const score = computePriority(matchedChain);\r\n            if (score > matches) {\r\n                matches = score;\r\n                match = matchedChain;\r\n            }\r\n        }\r\n    }\r\n    return match;\r\n};\r\nconst computePriority = (chain) => {\r\n    let score = 1;\r\n    let level = 1;\r\n    for (const route of chain) {\r\n        for (const path of route.path) {\r\n            if (path[0] === ':') {\r\n                score += Math.pow(1, level);\r\n            }\r\n            else if (path !== '') {\r\n                score += Math.pow(2, level);\r\n            }\r\n            level++;\r\n        }\r\n    }\r\n    return score;\r\n};\r\nclass RouterSegments {\r\n    constructor(path) {\r\n        this.path = path.slice();\r\n    }\r\n    next() {\r\n        if (this.path.length > 0) {\r\n            return this.path.shift();\r\n        }\r\n        return '';\r\n    }\r\n}\n\nconst readRedirects = (root) => {\r\n    return Array.from(root.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\r\n        .map(el => {\r\n        const to = readProp(el, 'to');\r\n        return {\r\n            from: parsePath(readProp(el, 'from')),\r\n            to: to == null ? undefined : parsePath(to),\r\n        };\r\n    });\r\n};\r\nconst readRoutes = (root) => {\r\n    return flattenRouterTree(readRouteNodes(root));\r\n};\r\nconst readRouteNodes = (root, node = root) => {\r\n    return Array.from(node.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\r\n        .map(el => {\r\n        const component = readProp(el, 'component');\r\n        if (component == null) {\r\n            throw new Error('component missing in ion-route');\r\n        }\r\n        return {\r\n            path: parsePath(readProp(el, 'url')),\r\n            id: component.toLowerCase(),\r\n            params: el.componentProps,\r\n            children: readRouteNodes(root, el)\r\n        };\r\n    });\r\n};\r\nconst readProp = (el, prop) => {\r\n    if (prop in el) {\r\n        return el[prop];\r\n    }\r\n    if (el.hasAttribute(prop)) {\r\n        return el.getAttribute(prop);\r\n    }\r\n    return null;\r\n};\r\nconst flattenRouterTree = (nodes) => {\r\n    const routes = [];\r\n    for (const node of nodes) {\r\n        flattenNode([], routes, node);\r\n    }\r\n    return routes;\r\n};\r\nconst flattenNode = (chain, routes, node) => {\r\n    const s = chain.slice();\r\n    s.push({\r\n        id: node.id,\r\n        path: node.path,\r\n        params: node.params\r\n    });\r\n    if (node.children.length === 0) {\r\n        routes.push(s);\r\n        return;\r\n    }\r\n    for (const sub of node.children) {\r\n        flattenNode(s, routes, sub);\r\n    }\r\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionRouteDidChange\", 7);\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"e\"])(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"e\"])(this.onRoutesChanged.bind(this), 100));\n    }\n    onPopState() {\n        const direction = this.historyDirection();\n        const path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, () => this.back());\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    push(url, direction = 'forward') {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        const path = parsePath(url);\n        this.setPath(path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\n};\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            Object(_theme_18cbe2cc_js__WEBPACK_IMPORTED_MODULE_3__[\"o\"])(this.href, ev, this.routerDirection);\n        };\n    }\n    render() {\n        const mode = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { onClick: this.onClick, class: Object.assign(Object.assign({}, Object(_theme_18cbe2cc_js__WEBPACK_IMPORTED_MODULE_3__[\"c\"])(this.color)), { [mode]: true, 'ion-activatable': true }) }, Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"a\", Object.assign({}, attrs), Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"slot\", null))));\n    }\n    static get style() { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; }\n};\n\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=55-es2015.js.map","import { r as registerInstance, d as createEvent, e as getElement, c as getIonMode, h, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { e as debounce } from './helpers-46f4a262.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Route = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\r\n    const path = segments\r\n        .filter(s => s.length > 0)\r\n        .join('/');\r\n    return '/' + path;\r\n};\r\nconst chainToPath = (chain) => {\r\n    const path = [];\r\n    for (const route of chain) {\r\n        for (const segment of route.path) {\r\n            if (segment[0] === ':') {\r\n                const param = route.params && route.params[segment.slice(1)];\r\n                if (!param) {\r\n                    return null;\r\n                }\r\n                path.push(param);\r\n            }\r\n            else if (segment !== '') {\r\n                path.push(segment);\r\n            }\r\n        }\r\n    }\r\n    return path;\r\n};\r\nconst writePath = (history, root, useHash, path, direction, state) => {\r\n    let url = generatePath([\r\n        ...parsePath(root),\r\n        ...path\r\n    ]);\r\n    if (useHash) {\r\n        url = '#' + url;\r\n    }\r\n    if (direction === ROUTER_INTENT_FORWARD) {\r\n        history.pushState(state, '', url);\r\n    }\r\n    else {\r\n        history.replaceState(state, '', url);\r\n    }\r\n};\r\nconst removePrefix = (prefix, path) => {\r\n    if (prefix.length > path.length) {\r\n        return null;\r\n    }\r\n    if (prefix.length <= 1 && prefix[0] === '') {\r\n        return path;\r\n    }\r\n    for (let i = 0; i < prefix.length; i++) {\r\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\r\n            return null;\r\n        }\r\n    }\r\n    if (path.length === prefix.length) {\r\n        return [''];\r\n    }\r\n    return path.slice(prefix.length);\r\n};\r\nconst readPath = (loc, root, useHash) => {\r\n    let pathname = loc.pathname;\r\n    if (useHash) {\r\n        const hash = loc.hash;\r\n        pathname = (hash[0] === '#')\r\n            ? hash.slice(1)\r\n            : '';\r\n    }\r\n    const prefix = parsePath(root);\r\n    const path = parsePath(pathname);\r\n    return removePrefix(prefix, path);\r\n};\r\nconst parsePath = (path) => {\r\n    if (path == null) {\r\n        return [''];\r\n    }\r\n    const segments = path.split('/')\r\n        .map(s => s.trim())\r\n        .filter(s => s.length > 0);\r\n    if (segments.length === 0) {\r\n        return [''];\r\n    }\r\n    else {\r\n        return segments;\r\n    }\r\n};\n\nconst printRoutes = (routes) => {\r\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n    for (const chain of routes) {\r\n        const path = [];\r\n        chain.forEach(r => path.push(...r.path));\r\n        const ids = chain.map(r => r.id);\r\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n    }\r\n    console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n    for (const redirect of redirects) {\r\n        if (redirect.to) {\r\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\r\n        }\r\n    }\r\n    console.groupEnd();\r\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false) => {\r\n    try {\r\n        // find next navigation outlet in the DOM\r\n        const outlet = searchNavNode(root);\r\n        // make sure we can continue interacting the DOM, otherwise abort\r\n        if (index >= chain.length || !outlet) {\r\n            return changed;\r\n        }\r\n        await outlet.componentOnReady();\r\n        const route = chain[index];\r\n        const result = await outlet.setRouteId(route.id, route.params, direction);\r\n        // if the outlet changed the page, reset navigation to neutral (no direction)\r\n        // this means nested outlets will not animate\r\n        if (result.changed) {\r\n            direction = ROUTER_INTENT_NONE;\r\n            changed = true;\r\n        }\r\n        // recursively set nested outlets\r\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed);\r\n        // once all nested outlets are visible let's make the parent visible too,\r\n        // using markVisible prevents flickering\r\n        if (result.markVisible) {\r\n            await result.markVisible();\r\n        }\r\n        return changed;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nconst readNavState = async (root) => {\r\n    const ids = [];\r\n    let outlet;\r\n    let node = root;\r\n    // tslint:disable-next-line:no-constant-condition\r\n    while (true) {\r\n        outlet = searchNavNode(node);\r\n        if (outlet) {\r\n            const id = await outlet.getRouteId();\r\n            if (id) {\r\n                node = id.element;\r\n                id.element = undefined;\r\n                ids.push(id);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n    if (searchNavNode(document.body)) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise(resolve => {\r\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\r\n    });\r\n};\r\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n    if (root.matches(QUERY)) {\r\n        return root;\r\n    }\r\n    const outlet = root.querySelector(QUERY);\r\n    return outlet ? outlet : undefined;\r\n};\n\nconst matchesRedirect = (input, route) => {\r\n    const { from, to } = route;\r\n    if (to === undefined) {\r\n        return false;\r\n    }\r\n    if (from.length > input.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < from.length; i++) {\r\n        const expected = from[i];\r\n        if (expected === '*') {\r\n            return true;\r\n        }\r\n        if (expected !== input[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return from.length === input.length;\r\n};\r\nconst routeRedirect = (path, routes) => {\r\n    return routes.find(route => matchesRedirect(path, route));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n    const len = Math.min(ids.length, chain.length);\r\n    let i = 0;\r\n    for (; i < len; i++) {\r\n        if (ids[i].toLowerCase() !== chain[i].id) {\r\n            break;\r\n        }\r\n    }\r\n    return i;\r\n};\r\nconst matchesPath = (inputPath, chain) => {\r\n    const segments = new RouterSegments(inputPath);\r\n    let matchesDefault = false;\r\n    let allparams;\r\n    for (let i = 0; i < chain.length; i++) {\r\n        const path = chain[i].path;\r\n        if (path[0] === '') {\r\n            matchesDefault = true;\r\n        }\r\n        else {\r\n            for (const segment of path) {\r\n                const data = segments.next();\r\n                // data param\r\n                if (segment[0] === ':') {\r\n                    if (data === '') {\r\n                        return null;\r\n                    }\r\n                    allparams = allparams || [];\r\n                    const params = allparams[i] || (allparams[i] = {});\r\n                    params[segment.slice(1)] = data;\r\n                }\r\n                else if (data !== segment) {\r\n                    return null;\r\n                }\r\n            }\r\n            matchesDefault = false;\r\n        }\r\n    }\r\n    const matches = (matchesDefault)\r\n        ? matchesDefault === (segments.next() === '')\r\n        : true;\r\n    if (!matches) {\r\n        return null;\r\n    }\r\n    if (allparams) {\r\n        return chain.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, allparams[i])\r\n        }));\r\n    }\r\n    return chain;\r\n};\r\nconst mergeParams = (a, b) => {\r\n    if (!a && b) {\r\n        return b;\r\n    }\r\n    else if (a && !b) {\r\n        return a;\r\n    }\r\n    else if (a && b) {\r\n        return Object.assign(Object.assign({}, a), b);\r\n    }\r\n    return undefined;\r\n};\r\nconst routerIDsToChain = (ids, chains) => {\r\n    let match = null;\r\n    let maxMatches = 0;\r\n    const plainIDs = ids.map(i => i.id);\r\n    for (const chain of chains) {\r\n        const score = matchesIDs(plainIDs, chain);\r\n        if (score > maxMatches) {\r\n            match = chain;\r\n            maxMatches = score;\r\n        }\r\n    }\r\n    if (match) {\r\n        return match.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, ids[i] && ids[i].params)\r\n        }));\r\n    }\r\n    return null;\r\n};\r\nconst routerPathToChain = (path, chains) => {\r\n    let match = null;\r\n    let matches = 0;\r\n    for (const chain of chains) {\r\n        const matchedChain = matchesPath(path, chain);\r\n        if (matchedChain !== null) {\r\n            const score = computePriority(matchedChain);\r\n            if (score > matches) {\r\n                matches = score;\r\n                match = matchedChain;\r\n            }\r\n        }\r\n    }\r\n    return match;\r\n};\r\nconst computePriority = (chain) => {\r\n    let score = 1;\r\n    let level = 1;\r\n    for (const route of chain) {\r\n        for (const path of route.path) {\r\n            if (path[0] === ':') {\r\n                score += Math.pow(1, level);\r\n            }\r\n            else if (path !== '') {\r\n                score += Math.pow(2, level);\r\n            }\r\n            level++;\r\n        }\r\n    }\r\n    return score;\r\n};\r\nclass RouterSegments {\r\n    constructor(path) {\r\n        this.path = path.slice();\r\n    }\r\n    next() {\r\n        if (this.path.length > 0) {\r\n            return this.path.shift();\r\n        }\r\n        return '';\r\n    }\r\n}\n\nconst readRedirects = (root) => {\r\n    return Array.from(root.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\r\n        .map(el => {\r\n        const to = readProp(el, 'to');\r\n        return {\r\n            from: parsePath(readProp(el, 'from')),\r\n            to: to == null ? undefined : parsePath(to),\r\n        };\r\n    });\r\n};\r\nconst readRoutes = (root) => {\r\n    return flattenRouterTree(readRouteNodes(root));\r\n};\r\nconst readRouteNodes = (root, node = root) => {\r\n    return Array.from(node.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\r\n        .map(el => {\r\n        const component = readProp(el, 'component');\r\n        if (component == null) {\r\n            throw new Error('component missing in ion-route');\r\n        }\r\n        return {\r\n            path: parsePath(readProp(el, 'url')),\r\n            id: component.toLowerCase(),\r\n            params: el.componentProps,\r\n            children: readRouteNodes(root, el)\r\n        };\r\n    });\r\n};\r\nconst readProp = (el, prop) => {\r\n    if (prop in el) {\r\n        return el[prop];\r\n    }\r\n    if (el.hasAttribute(prop)) {\r\n        return el.getAttribute(prop);\r\n    }\r\n    return null;\r\n};\r\nconst flattenRouterTree = (nodes) => {\r\n    const routes = [];\r\n    for (const node of nodes) {\r\n        flattenNode([], routes, node);\r\n    }\r\n    return routes;\r\n};\r\nconst flattenNode = (chain, routes, node) => {\r\n    const s = chain.slice();\r\n    s.push({\r\n        id: node.id,\r\n        path: node.path,\r\n        params: node.params\r\n    });\r\n    if (node.children.length === 0) {\r\n        routes.push(s);\r\n        return;\r\n    }\r\n    for (const sub of node.children) {\r\n        flattenNode(s, routes, sub);\r\n    }\r\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    onPopState() {\n        const direction = this.historyDirection();\n        const path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, () => this.back());\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    push(url, direction = 'forward') {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        const path = parsePath(url);\n        this.setPath(path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n};\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n    static get style() { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; }\n};\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}