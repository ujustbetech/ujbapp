{"version":3,"sources":["65-es5.js","webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js"],"names":[],"mappings":"AAAA,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC;QAEnE,KAAK,CAAC,iEAAiE;QACvE;;mFAE2E;QAC3E,uCAAuC;QACvC,KAAK,CAAC,CAAC,UAAS,MAAM,EAAE,mBAAmB,EAAE,mBAAmB;YAEhE,YAAY,CAAC;YCTb;YAAA;YAAA;YAAA;YAGA,IAAM,eAAe,GAAG,iBAAiB,CAAC;YAC1C,IAAM,eAAe,GAAG,iBAAiB,CAAC;YAC1C,IAAM,KAAK,GAAG;gBACV,IAAI,EAAE,kBAAkB;gBACxB,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,qBAAqB;gBAC3B,OAAO,EAAE,EAAE;aACd,CAAC;YACF,IAAM,SAAS;gBACX,iBAAY,OAAO;oBACf,2DAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAChC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB;;uBAEG;oBACH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB;;;;uBAIG;oBACH,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;oBACxB,IAAI,CAAC,mBAAmB,GAAG,2DAAW,CAAC,IAAI,EAAE,qBAAqB,EAAE,CAAC,CAAC,CAAC;gBAC3E,CAAC;gBACD,gCAAc,GAAd,UAAe,OAAO;oBAClB,IAAM,MAAM,GAAG,EAAE,OAAO,WAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC3D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1C,CAAC;gBACD,mCAAiB,GAAjB;oBACI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC;gBACD,sCAAoB,GAApB;oBACI,IAAI,IAAI,CAAC,GAAG,EAAE;wBACV,IAAI,CAAC,GAAG,EAAE,CAAC;wBACX,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;qBACxB;gBACL,CAAC;gBACD,mCAAiB,GAAjB;oBACI,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;wBAC9B,OAAO,CAAC,IAAI,CAAC,4UAYxB,CAAC,CAAC;qBACM;gBACL,CAAC;gBACD,6BAAW,GAAX;oBAAA,iBAiCC;oBAhCG,IAAI,IAAI,CAAC,GAAG,EAAE;wBACV,IAAI,CAAC,GAAG,EAAE,CAAC;wBACX,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;qBACxB;oBACD,sCAAsC;oBACtC,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO;qBACV;oBACD,0BAA0B;oBAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACxB,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;wBAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO;qBACV;oBACD,+DAA+D;oBAC/D,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;oBACzC,2CAA2C;oBAC3C,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;wBACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO;qBACV;oBACD,IAAI,MAAM,CAAC,UAAU,EAAE;wBACnB,wBAAwB;wBACxB,IAAM,UAAQ,GAAG,UAAC,CAAC;4BACf,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;wBAC7B,CAAC,CAAC;wBACF,IAAM,WAAS,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBAChD,WAAS,CAAC,WAAW,CAAC,UAAQ,CAAC,CAAC;wBAChC,IAAI,CAAC,GAAG,GAAG,cAAM,kBAAS,CAAC,cAAc,CAAC,UAAQ,CAAC,EAAlC,CAAkC,CAAC;wBACpD,IAAI,CAAC,OAAO,GAAG,WAAS,CAAC,OAAO,CAAC;qBACpC;gBACL,CAAC;gBACD,wBAAM,GAAN,UAAO,OAAO;oBACV,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;wBACf,OAAO,KAAK,CAAC;qBAChB;oBACD,OAAO,OAAO,CAAC,aAAa,KAAK,IAAI,CAAC,EAAE;2BACjC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBACvD,CAAC;gBACD,+BAAa,GAAb;oBACI,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC;oBAClC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC;oBACrC,IAAI,SAAS,GAAG,KAAK,CAAC;oBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;wBACzB,IAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAC1B,IAAM,MAAM,GAAG,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;wBAC7F,IAAI,MAAM,EAAE;4BACR,IAAI,SAAS,EAAE;gCACX,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;gCAC/D,OAAO;6BACV;4BACD,SAAS,GAAG,IAAI,CAAC;yBACpB;wBACD,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;qBAC/B;oBACD,IAAI,CAAC,SAAS,EAAE;wBACZ,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;qBAClE;gBACL,CAAC;gBACD,wBAAM,GAAN;;oBACI,IAAM,IAAI,GAAG,2DAAU,CAAC,IAAI,CAAC,CAAC;oBAC9B,OAAO,CAAC,2DAAC,CAAC,mDAAI,EAAE,EAAE,KAAK;4BACf,GAAC,IAAI,IAAG,IAAI;4BACZ,8BAA8B;4BAC9B,GAAC,gBAAc,IAAM,IAAG,IAAI;4BAC5B,wBAAoB,GAAE,IAAI,CAAC,OAAO;+BACrC,EAAE,CAAC,CAAC,CAAC;gBACd,CAAC;gBACD,sBAAI,uBAAE;yBAAN,cAAW,OAAO,2DAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;mBAAA;gBACrC,sBAAW,mBAAQ;yBAAnB;wBAAwB,OAAO;4BAC3B,SAAS,EAAE,CAAC,gBAAgB,CAAC;4BAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;4BAC3B,MAAM,EAAE,CAAC,aAAa,CAAC;yBAC1B,CAAC;oBAAC,CAAC;;;mBAAA;gBACJ,sBAAW,gBAAK;yBAAhB,cAAqB,OAAO,onCAAonC,CAAC,CAAC,CAAC;;;mBAAA;gBACvpC,cAAC;YAAD,CAAC,IAAC;YACF,IAAM,YAAY,GAAG,UAAC,EAAE,EAAE,MAAM;gBAC5B,IAAI,KAAK,CAAC;gBACV,IAAI,QAAQ,CAAC;gBACb,IAAI,MAAM,EAAE;oBACR,KAAK,GAAG,eAAe,CAAC;oBACxB,QAAQ,GAAG,eAAe,CAAC;iBAC9B;qBACI;oBACD,KAAK,GAAG,eAAe,CAAC;oBACxB,QAAQ,GAAG,eAAe,CAAC;iBAC9B;gBACD,IAAM,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;gBAC/B,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC/B,CAAC,CAAC;YDmBF,KAAK;QAAC,CAAC,CAAC;KAEP,CAAC,CAAC,CAAC;AACJ,qCAAqC","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[65],{\n\n/***/ \"./node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js ***!\n  \\***********************************************************************/\n/*! exports provided: ion_split_pane */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_split_pane\", function() { return SplitPane; });\n/* harmony import */ var _core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-feeeff0d.js */ \"./node_modules/@ionic/core/dist/esm/core-feeeff0d.js\");\n/* harmony import */ var _config_3c7f3790_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-3c7f3790.js */ \"./node_modules/@ionic/core/dist/esm/config-3c7f3790.js\");\n\n\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionSplitPaneVisible\", 7);\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    componentWillLoad() {\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-split-pane>\n    ...\n    <div main>...</div>\n  </ion-split-pane>\n\nAFTER:\n  <ion-split-pane contentId=\"main-content\">\n    ...\n    <div id=\"main-content\">...</div>\n  </ion-split-pane>\n`);\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this);\n        return (Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }));\n    }\n    get el() { return Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n    static get style() { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\n\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=65-es2015.js.map","import { r as registerInstance, d as createEvent, c as getIonMode, h, e as getElement, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    componentWillLoad() {\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-split-pane>\n    ...\n    <div main>...</div>\n  </ion-split-pane>\n\nAFTER:\n  <ion-split-pane contentId=\"main-content\">\n    ...\n    <div id=\"main-content\">...</div>\n  </ion-split-pane>\n`);\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n    static get style() { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\n\nexport { SplitPane as ion_split_pane };\n"]}