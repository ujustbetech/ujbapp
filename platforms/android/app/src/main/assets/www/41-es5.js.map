{"version":3,"sources":["41-es5.js","webpack:///node_modules/@ionic/core/dist/esm/ion-nav_5.entry.js"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[41],{\n\n/***/ \"./node_modules/@ionic/core/dist/esm/ion-nav_5.entry.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/@ionic/core/dist/esm/ion-nav_5.entry.js ***!\n  \\**************************************************************/\n/*! exports provided: ion_nav, ion_nav_link, ion_nav_pop, ion_nav_push, ion_nav_set_root */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_nav\", function() { return Nav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_nav_link\", function() { return NavLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_nav_pop\", function() { return NavPop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_nav_push\", function() { return NavPush; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ion_nav_set_root\", function() { return NavSetRoot; });\n/* harmony import */ var _core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-feeeff0d.js */ \"./node_modules/@ionic/core/dist/esm/core-feeeff0d.js\");\n/* harmony import */ var _config_3c7f3790_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-3c7f3790.js */ \"./node_modules/@ionic/core/dist/esm/config-3c7f3790.js\");\n/* harmony import */ var _helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers-46f4a262.js */ \"./node_modules/@ionic/core/dist/esm/helpers-46f4a262.js\");\n/* harmony import */ var _constants_3c3e1099_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants-3c3e1099.js */ \"./node_modules/@ionic/core/dist/esm/constants-3c3e1099.js\");\n/* harmony import */ var _framework_delegate_c2e2e1f4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./framework-delegate-c2e2e1f4.js */ \"./node_modules/@ionic/core/dist/esm/framework-delegate-c2e2e1f4.js\");\n/* harmony import */ var _index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-4d91f03a.js */ \"./node_modules/@ionic/core/dist/esm/index-4d91f03a.js\");\n/* harmony import */ var _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cubic-bezier-2812fda3.js */ \"./node_modules/@ionic/core/dist/esm/cubic-bezier-2812fda3.js\");\n\n\n\n\n\n\n\n\nconst VIEW_STATE_NEW = 1;\r\nconst VIEW_STATE_ATTACHED = 2;\r\nconst VIEW_STATE_DESTROYED = 3;\r\nclass ViewController {\r\n    constructor(component, params) {\r\n        this.component = component;\r\n        this.params = params;\r\n        this.state = VIEW_STATE_NEW;\r\n    }\r\n    async init(container) {\r\n        this.state = VIEW_STATE_ATTACHED;\r\n        if (!this.element) {\r\n            const component = this.component;\r\n            this.element = await Object(_framework_delegate_c2e2e1f4_js__WEBPACK_IMPORTED_MODULE_4__[\"a\"])(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     */\r\n    _destroy() {\r\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\r\n        const element = this.element;\r\n        if (element) {\r\n            if (this.delegate) {\r\n                this.delegate.removeViewFromDom(element.parentElement, element);\r\n            }\r\n            else {\r\n                element.remove();\r\n            }\r\n        }\r\n        this.nav = undefined;\r\n        this.state = VIEW_STATE_DESTROYED;\r\n    }\r\n}\r\nconst matches = (view, id, params) => {\r\n    if (!view) {\r\n        return false;\r\n    }\r\n    if (view.component !== id) {\r\n        return false;\r\n    }\r\n    const currentParams = view.params;\r\n    if (currentParams === params) {\r\n        return true;\r\n    }\r\n    if (!currentParams && !params) {\r\n        return true;\r\n    }\r\n    if (!currentParams || !params) {\r\n        return false;\r\n    }\r\n    const keysA = Object.keys(currentParams);\r\n    const keysB = Object.keys(params);\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n    // Test for A's keys different from B.\r\n    for (const key of keysA) {\r\n        if (currentParams[key] !== params[key]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nconst convertToView = (page, params) => {\r\n    if (!page) {\r\n        return null;\r\n    }\r\n    if (page instanceof ViewController) {\r\n        return page;\r\n    }\r\n    return new ViewController(page, params);\r\n};\r\nconst convertToViews = (pages) => {\r\n    return pages.map(page => {\r\n        if (page instanceof ViewController) {\r\n            return page;\r\n        }\r\n        if ('page' in page) {\r\n            return convertToView(page.page, page.params);\r\n        }\r\n        return convertToView(page, undefined);\r\n    }).filter(v => v !== null);\r\n};\n\nconst Nav = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n        this.ionNavWillLoad = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"d\"])(this, \"ionNavDidChange\", 3);\n    }\n    swipeGestureChanged() {\n        if (this.gesture) {\n            this.gesture.setDisabled(this.swipeGesture !== true);\n        }\n    }\n    rootChanged() {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    }\n    componentWillLoad() {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            const mode = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this);\n            this.swipeGesture = _config_3c7f3790_js__WEBPACK_IMPORTED_MODULE_1__[\"b\"].getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    }\n    async componentDidLoad() {\n        this.rootChanged();\n        this.gesture = (await __webpack_require__.e(/*! import() | swipe-back-35ad8e37-js */ \"swipe-back-35ad8e37-js\").then(__webpack_require__.bind(null, /*! ./swipe-back-35ad8e37.js */ \"./node_modules/@ionic/core/dist/esm/swipe-back-35ad8e37.js\"))).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n        this.swipeGestureChanged();\n    }\n    componentDidUnload() {\n        for (const view of this.views) {\n            Object(_index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__[\"l\"])(view.element, _constants_3c3e1099_js__WEBPACK_IMPORTED_MODULE_3__[\"d\"]);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    }\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    push(component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ page: component, params: componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insert(insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ page: component, params: componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insertPages(insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts\n        }, done);\n    }\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    pop(opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts\n        }, done);\n    }\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popTo(indexOrViewCtrl, opts, done) {\n        const tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    }\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popToRoot(opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    removeIndex(startIndex, removeCount = 1, opts, done) {\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount,\n            opts\n        }, done);\n    }\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setRoot(component, componentProps, opts, done) {\n        return this.setPages([{ page: component, params: componentProps }], opts, done);\n    }\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setPages(views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /** @internal */\n    setRouteId(id, params, direction) {\n        const active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        let resolve;\n        const promise = new Promise(r => (resolve = r));\n        let finish;\n        const commonOpts = {\n            updateURL: false,\n            viewIsReady: enteringEl => {\n                let mark;\n                const p = new Promise(r => (mark = r));\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: async () => {\n                        mark();\n                        await finish;\n                    }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            const viewController = this.views.find(v => matches(v, id, params));\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back' }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, commonOpts);\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true }));\n            }\n        }\n        return promise;\n    }\n    /** @internal */\n    async getRouteId() {\n        const active = this.getActiveSync();\n        return active\n            ? {\n                id: active.element.tagName,\n                params: active.params,\n                element: active.element\n            }\n            : undefined;\n    }\n    /**\n     * Get the active view.\n     */\n    getActive() {\n        return Promise.resolve(this.getActiveSync());\n    }\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    getByIndex(index) {\n        return Promise.resolve(this.views[index]);\n    }\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    canGoBack(view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    }\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    getPrevious(view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    }\n    getLength() {\n        return this.views.length;\n    }\n    getActiveSync() {\n        return this.views[this.views.length - 1];\n    }\n    canGoBackSync(view = this.getActiveSync()) {\n        return !!(view && this.getPreviousSync(view));\n    }\n    getPreviousSync(view = this.getActiveSync()) {\n        if (!view) {\n            return undefined;\n        }\n        const views = this.views;\n        const index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    }\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    queueTrns(ti, done) {\n        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n            return Promise.resolve(false);\n        }\n        const promise = new Promise((resolve, reject) => {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        // Normalize empty\n        if (ti.insertViews && ti.insertViews.length === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    }\n    success(result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    }\n    failed(rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    }\n    fireError(rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    }\n    nextTrns() {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        const ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    }\n    async runTransition(ti) {\n        try {\n            // set that this nav is actively transitioning\n            this.ionNavWillChange.emit();\n            this.isTransitioning = true;\n            this.prepareTI(ti);\n            const leavingView = this.getActiveSync();\n            const enteringView = this.getEnteringView(ti, leavingView);\n            if (!leavingView && !enteringView) {\n                throw new Error('no views in the stack to be removed');\n            }\n            if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n                await enteringView.init(this.el);\n            }\n            this.postViewInit(enteringView, leavingView, ti);\n            // Needs transition?\n            const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                enteringView !== leavingView;\n            const result = requiresTransition\n                ? await this.transition(enteringView, leavingView, ti)\n                : {\n                    // transition is not required, so we are already done!\n                    // they're inserting/removing the views somewhere in the middle or\n                    // beginning, so visually nothing needs to animate/transition\n                    // resolve immediately because there's no animation that's happening\n                    hasCompleted: true,\n                    requiresTransition: false\n                };\n            this.success(result, ti);\n            this.ionNavDidChange.emit();\n        }\n        catch (rejectReason) {\n            this.failed(rejectReason, ti);\n        }\n        this.isTransitioning = false;\n        this.nextTrns();\n    }\n    prepareTI(ti) {\n        const viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(ti.removeStart !== undefined, 'removeView needs removeStart');\n            Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(ti.removeCount !== undefined, 'removeView needs removeCount');\n            const index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        const insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(insertViews.length > 0, 'length can not be zero');\n        const viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (const view of viewControllers) {\n            view.delegate = ti.opts.delegate;\n            const nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    }\n    getEnteringView(ti, leavingView) {\n        const insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        const removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            const views = this.views;\n            const removeEnd = removeStart + ti.removeCount;\n            for (let i = views.length - 1; i >= 0; i--) {\n                const view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    }\n    postViewInit(enteringView, leavingView, ti) {\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(ti.resolve, 'resolve must be valid');\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(ti.reject, 'reject must be valid');\n        const opts = ti.opts;\n        const insertViews = ti.insertViews;\n        const removeStart = ti.removeStart;\n        const removeCount = ti.removeCount;\n        let destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(removeStart >= 0, 'removeStart can not be negative');\n            Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (let i = 0; i < removeCount; i++) {\n                const view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        const finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            let insertIndex = ti.insertStart;\n            for (const view of insertViews) {\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (const view of destroyQueue) {\n                Object(_index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__[\"l\"])(view.element, _constants_3c3e1099_js__WEBPACK_IMPORTED_MODULE_3__[\"b\"]);\n                Object(_index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__[\"l\"])(view.element, _constants_3c3e1099_js__WEBPACK_IMPORTED_MODULE_3__[\"c\"]);\n                Object(_index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__[\"l\"])(view.element, _constants_3c3e1099_js__WEBPACK_IMPORTED_MODULE_3__[\"d\"]);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (const view of destroyQueue) {\n                this.destroyView(view);\n            }\n        }\n    }\n    async transition(enteringView, leavingView, ti) {\n        // we should animate (duration > 0) if the pushed page is not the first one (startup)\n        // or if it is a portal (modal, actionsheet, etc.)\n        const opts = ti.opts;\n        const progressCallback = opts.progressAnimation\n            ? (ani) => this.sbAni = ani\n            : undefined;\n        const mode = Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this);\n        const enteringEl = enteringView.element;\n        const leavingEl = leavingView && leavingView.element;\n        const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || _config_3c7f3790_js__WEBPACK_IMPORTED_MODULE_1__[\"b\"].get('navAnimation'), progressCallback, animated: this.animated && _config_3c7f3790_js__WEBPACK_IMPORTED_MODULE_1__[\"b\"].getBoolean('animated', true), enteringEl,\n            leavingEl }, opts);\n        const { hasCompleted } = await Object(_index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__[\"t\"])(animationOpts);\n        return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n    }\n    transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n        const cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted,\n            requiresTransition: true,\n            enteringView,\n            leavingView,\n            direction: opts.direction\n        };\n    }\n    insertViewAt(view, index) {\n        const views = this.views;\n        const existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    }\n    removeView(view) {\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        const views = this.views;\n        const index = views.indexOf(view);\n        Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_2__[\"b\"])(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    }\n    destroyView(view) {\n        view._destroy();\n        this.removeView(view);\n    }\n    /**\n     * DOM WRITE\n     */\n    cleanup(activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        const views = this.views;\n        const activeViewIndex = views.indexOf(activeView);\n        for (let i = views.length - 1; i >= 0; i--) {\n            const view = views[i];\n            const element = view.element;\n            if (i > activeViewIndex) {\n                // this view comes after the active view\n                // let's unload it\n                Object(_index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__[\"l\"])(element, _constants_3c3e1099_js__WEBPACK_IMPORTED_MODULE_3__[\"d\"]);\n                this.destroyView(view);\n            }\n            else if (i < activeViewIndex) {\n                // this view comes before the active view\n                // and it is not a portal then ensure it is hidden\n                Object(_index_4d91f03a_js__WEBPACK_IMPORTED_MODULE_5__[\"s\"])(element, true);\n            }\n        }\n    }\n    canStart() {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    }\n    onStart() {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    }\n    onMove(stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    }\n    onEnd(shouldComplete, stepValue, dur) {\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(() => {\n                this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += Object(_cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"g\"])(new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](0, 0), new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](1, 0), new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](0.68, 0.28), new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](1, 1), stepValue);\n            }\n            else {\n                newStepValue += Object(_cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"g\"])(new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](0, 0), new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](0.32, 0.72), new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](0, 1), new _cubic_bezier_2812fda3_js__WEBPACK_IMPORTED_MODULE_6__[\"P\"](1, 1), stepValue);\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    }\n    render() {\n        return (Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"slot\", null));\n    }\n    get el() { return Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\n    static get watchers() { return {\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"root\": [\"rootChanged\"]\n    }; }\n    static get style() { return \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\"; }\n};\n\nconst navLink = (el, routerDirection, component, componentProps) => {\r\n    const nav = el.closest('ion-nav');\r\n    if (nav) {\r\n        if (routerDirection === 'forward') {\r\n            if (component !== undefined) {\r\n                return nav.push(component, componentProps, { skipIfBusy: true });\r\n            }\r\n        }\r\n        else if (routerDirection === 'root') {\r\n            if (component !== undefined) {\r\n                return nav.setRoot(component, componentProps, { skipIfBusy: true });\r\n            }\r\n        }\r\n        else if (routerDirection === 'back') {\r\n            return nav.pop({ skipIfBusy: true });\r\n        }\r\n    }\r\n    return Promise.resolve(false);\r\n};\n\nconst NavLink = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = () => {\n            return navLink(this.el, this.routerDirection, this.component, this.componentProps);\n        };\n    }\n    render() {\n        return (Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { onClick: this.onClick }));\n    }\n    get el() { return Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\n};\n\nconst NavPop = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.pop = () => {\n            return navLink(this.el, 'back');\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-pop] <ion-nav-pop> is deprecated. Use `<ion-nav-link routerDirection=\"back\">` instead.');\n    }\n    render() {\n        return (Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { onClick: this.pop }));\n    }\n    get el() { return Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\n};\n\nconst NavPush = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.push = () => {\n            return navLink(this.el, 'forward', this.component, this.componentProps);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-push] `<ion-nav-push component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\">` instead.');\n    }\n    render() {\n        return (Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { onClick: this.push }));\n    }\n    get el() { return Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\n};\n\nconst NavSetRoot = class {\n    constructor(hostRef) {\n        Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.setRoot = () => {\n            return navLink(this.el, 'root', this.component, this.componentProps);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-set-root] `<ion-nav-set-root component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\" routerDirection=\"root\">` instead.');\n    }\n    render() {\n        return (Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { onClick: this.setRoot }));\n    }\n    get el() { return Object(_core_feeeff0d_js__WEBPACK_IMPORTED_MODULE_0__[\"e\"])(this); }\n};\n\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=41-es2015.js.map","import { r as registerInstance, d as createEvent, c as getIonMode, h, e as getElement, H as Host } from './core-feeeff0d.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { b as assert } from './helpers-46f4a262.js';\nimport { d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './constants-3c3e1099.js';\nimport { a as attachComponent } from './framework-delegate-c2e2e1f4.js';\nimport { l as lifecycle, t as transition, s as setPageHidden } from './index-4d91f03a.js';\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-2812fda3.js';\n\nconst VIEW_STATE_NEW = 1;\r\nconst VIEW_STATE_ATTACHED = 2;\r\nconst VIEW_STATE_DESTROYED = 3;\r\nclass ViewController {\r\n    constructor(component, params) {\r\n        this.component = component;\r\n        this.params = params;\r\n        this.state = VIEW_STATE_NEW;\r\n    }\r\n    async init(container) {\r\n        this.state = VIEW_STATE_ATTACHED;\r\n        if (!this.element) {\r\n            const component = this.component;\r\n            this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     */\r\n    _destroy() {\r\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\r\n        const element = this.element;\r\n        if (element) {\r\n            if (this.delegate) {\r\n                this.delegate.removeViewFromDom(element.parentElement, element);\r\n            }\r\n            else {\r\n                element.remove();\r\n            }\r\n        }\r\n        this.nav = undefined;\r\n        this.state = VIEW_STATE_DESTROYED;\r\n    }\r\n}\r\nconst matches = (view, id, params) => {\r\n    if (!view) {\r\n        return false;\r\n    }\r\n    if (view.component !== id) {\r\n        return false;\r\n    }\r\n    const currentParams = view.params;\r\n    if (currentParams === params) {\r\n        return true;\r\n    }\r\n    if (!currentParams && !params) {\r\n        return true;\r\n    }\r\n    if (!currentParams || !params) {\r\n        return false;\r\n    }\r\n    const keysA = Object.keys(currentParams);\r\n    const keysB = Object.keys(params);\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n    // Test for A's keys different from B.\r\n    for (const key of keysA) {\r\n        if (currentParams[key] !== params[key]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nconst convertToView = (page, params) => {\r\n    if (!page) {\r\n        return null;\r\n    }\r\n    if (page instanceof ViewController) {\r\n        return page;\r\n    }\r\n    return new ViewController(page, params);\r\n};\r\nconst convertToViews = (pages) => {\r\n    return pages.map(page => {\r\n        if (page instanceof ViewController) {\r\n            return page;\r\n        }\r\n        if ('page' in page) {\r\n            return convertToView(page.page, page.params);\r\n        }\r\n        return convertToView(page, undefined);\r\n    }).filter(v => v !== null);\r\n};\n\nconst Nav = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    }\n    swipeGestureChanged() {\n        if (this.gesture) {\n            this.gesture.setDisabled(this.swipeGesture !== true);\n        }\n    }\n    rootChanged() {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    }\n    componentWillLoad() {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            const mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    }\n    async componentDidLoad() {\n        this.rootChanged();\n        this.gesture = (await import('./swipe-back-35ad8e37.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n        this.swipeGestureChanged();\n    }\n    componentDidUnload() {\n        for (const view of this.views) {\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    }\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    push(component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ page: component, params: componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insert(insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ page: component, params: componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insertPages(insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts\n        }, done);\n    }\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    pop(opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts\n        }, done);\n    }\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popTo(indexOrViewCtrl, opts, done) {\n        const tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    }\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popToRoot(opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    removeIndex(startIndex, removeCount = 1, opts, done) {\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount,\n            opts\n        }, done);\n    }\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setRoot(component, componentProps, opts, done) {\n        return this.setPages([{ page: component, params: componentProps }], opts, done);\n    }\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setPages(views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /** @internal */\n    setRouteId(id, params, direction) {\n        const active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        let resolve;\n        const promise = new Promise(r => (resolve = r));\n        let finish;\n        const commonOpts = {\n            updateURL: false,\n            viewIsReady: enteringEl => {\n                let mark;\n                const p = new Promise(r => (mark = r));\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: async () => {\n                        mark();\n                        await finish;\n                    }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            const viewController = this.views.find(v => matches(v, id, params));\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back' }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, commonOpts);\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true }));\n            }\n        }\n        return promise;\n    }\n    /** @internal */\n    async getRouteId() {\n        const active = this.getActiveSync();\n        return active\n            ? {\n                id: active.element.tagName,\n                params: active.params,\n                element: active.element\n            }\n            : undefined;\n    }\n    /**\n     * Get the active view.\n     */\n    getActive() {\n        return Promise.resolve(this.getActiveSync());\n    }\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    getByIndex(index) {\n        return Promise.resolve(this.views[index]);\n    }\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    canGoBack(view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    }\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    getPrevious(view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    }\n    getLength() {\n        return this.views.length;\n    }\n    getActiveSync() {\n        return this.views[this.views.length - 1];\n    }\n    canGoBackSync(view = this.getActiveSync()) {\n        return !!(view && this.getPreviousSync(view));\n    }\n    getPreviousSync(view = this.getActiveSync()) {\n        if (!view) {\n            return undefined;\n        }\n        const views = this.views;\n        const index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    }\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    queueTrns(ti, done) {\n        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n            return Promise.resolve(false);\n        }\n        const promise = new Promise((resolve, reject) => {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        // Normalize empty\n        if (ti.insertViews && ti.insertViews.length === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    }\n    success(result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    }\n    failed(rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    }\n    fireError(rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    }\n    nextTrns() {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        const ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    }\n    async runTransition(ti) {\n        try {\n            // set that this nav is actively transitioning\n            this.ionNavWillChange.emit();\n            this.isTransitioning = true;\n            this.prepareTI(ti);\n            const leavingView = this.getActiveSync();\n            const enteringView = this.getEnteringView(ti, leavingView);\n            if (!leavingView && !enteringView) {\n                throw new Error('no views in the stack to be removed');\n            }\n            if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n                await enteringView.init(this.el);\n            }\n            this.postViewInit(enteringView, leavingView, ti);\n            // Needs transition?\n            const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                enteringView !== leavingView;\n            const result = requiresTransition\n                ? await this.transition(enteringView, leavingView, ti)\n                : {\n                    // transition is not required, so we are already done!\n                    // they're inserting/removing the views somewhere in the middle or\n                    // beginning, so visually nothing needs to animate/transition\n                    // resolve immediately because there's no animation that's happening\n                    hasCompleted: true,\n                    requiresTransition: false\n                };\n            this.success(result, ti);\n            this.ionNavDidChange.emit();\n        }\n        catch (rejectReason) {\n            this.failed(rejectReason, ti);\n        }\n        this.isTransitioning = false;\n        this.nextTrns();\n    }\n    prepareTI(ti) {\n        const viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            const index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        const insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        const viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (const view of viewControllers) {\n            view.delegate = ti.opts.delegate;\n            const nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    }\n    getEnteringView(ti, leavingView) {\n        const insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        const removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            const views = this.views;\n            const removeEnd = removeStart + ti.removeCount;\n            for (let i = views.length - 1; i >= 0; i--) {\n                const view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    }\n    postViewInit(enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        const opts = ti.opts;\n        const insertViews = ti.insertViews;\n        const removeStart = ti.removeStart;\n        const removeCount = ti.removeCount;\n        let destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (let i = 0; i < removeCount; i++) {\n                const view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        const finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            let insertIndex = ti.insertStart;\n            for (const view of insertViews) {\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (const view of destroyQueue) {\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (const view of destroyQueue) {\n                this.destroyView(view);\n            }\n        }\n    }\n    async transition(enteringView, leavingView, ti) {\n        // we should animate (duration > 0) if the pushed page is not the first one (startup)\n        // or if it is a portal (modal, actionsheet, etc.)\n        const opts = ti.opts;\n        const progressCallback = opts.progressAnimation\n            ? (ani) => this.sbAni = ani\n            : undefined;\n        const mode = getIonMode(this);\n        const enteringEl = enteringView.element;\n        const leavingEl = leavingView && leavingView.element;\n        const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n            leavingEl }, opts);\n        const { hasCompleted } = await transition(animationOpts);\n        return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n    }\n    transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n        const cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted,\n            requiresTransition: true,\n            enteringView,\n            leavingView,\n            direction: opts.direction\n        };\n    }\n    insertViewAt(view, index) {\n        const views = this.views;\n        const existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    }\n    removeView(view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        const views = this.views;\n        const index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    }\n    destroyView(view) {\n        view._destroy();\n        this.removeView(view);\n    }\n    /**\n     * DOM WRITE\n     */\n    cleanup(activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        const views = this.views;\n        const activeViewIndex = views.indexOf(activeView);\n        for (let i = views.length - 1; i >= 0; i--) {\n            const view = views[i];\n            const element = view.element;\n            if (i > activeViewIndex) {\n                // this view comes after the active view\n                // let's unload it\n                lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                this.destroyView(view);\n            }\n            else if (i < activeViewIndex) {\n                // this view comes before the active view\n                // and it is not a portal then ensure it is hidden\n                setPageHidden(element, true);\n            }\n        }\n    }\n    canStart() {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    }\n    onStart() {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    }\n    onMove(stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    }\n    onEnd(shouldComplete, stepValue, dur) {\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(() => {\n                this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(1, 0), new Point(0.68, 0.28), new Point(1, 1), stepValue);\n            }\n            else {\n                newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.32, 0.72), new Point(0, 1), new Point(1, 1), stepValue);\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    }\n    render() {\n        return (h(\"slot\", null));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"root\": [\"rootChanged\"]\n    }; }\n    static get style() { return \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\"; }\n};\n\nconst navLink = (el, routerDirection, component, componentProps) => {\r\n    const nav = el.closest('ion-nav');\r\n    if (nav) {\r\n        if (routerDirection === 'forward') {\r\n            if (component !== undefined) {\r\n                return nav.push(component, componentProps, { skipIfBusy: true });\r\n            }\r\n        }\r\n        else if (routerDirection === 'root') {\r\n            if (component !== undefined) {\r\n                return nav.setRoot(component, componentProps, { skipIfBusy: true });\r\n            }\r\n        }\r\n        else if (routerDirection === 'back') {\r\n            return nav.pop({ skipIfBusy: true });\r\n        }\r\n    }\r\n    return Promise.resolve(false);\r\n};\n\nconst NavLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = () => {\n            return navLink(this.el, this.routerDirection, this.component, this.componentProps);\n        };\n    }\n    render() {\n        return (h(Host, { onClick: this.onClick }));\n    }\n    get el() { return getElement(this); }\n};\n\nconst NavPop = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.pop = () => {\n            return navLink(this.el, 'back');\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-pop] <ion-nav-pop> is deprecated. Use `<ion-nav-link routerDirection=\"back\">` instead.');\n    }\n    render() {\n        return (h(Host, { onClick: this.pop }));\n    }\n    get el() { return getElement(this); }\n};\n\nconst NavPush = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.push = () => {\n            return navLink(this.el, 'forward', this.component, this.componentProps);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-push] `<ion-nav-push component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\">` instead.');\n    }\n    render() {\n        return (h(Host, { onClick: this.push }));\n    }\n    get el() { return getElement(this); }\n};\n\nconst NavSetRoot = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.setRoot = () => {\n            return navLink(this.el, 'root', this.component, this.componentProps);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-set-root] `<ion-nav-set-root component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\" routerDirection=\"root\">` instead.');\n    }\n    render() {\n        return (h(Host, { onClick: this.setRoot }));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link, NavPop as ion_nav_pop, NavPush as ion_nav_push, NavSetRoot as ion_nav_set_root };\n"]}